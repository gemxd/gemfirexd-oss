parReg/colocation/persistence/customPartitioningPersist.conf routingFunction=key redundantCopies=0,2
parReg/colocation/persistence/customPartitioningPersist.conf routingFunction=callbackarg redundantCopies=0,3
parReg/colocation/persistence/colocationPersist.conf peerHosts=5 peerVMsPerHost=1 peerThreadsPerVM=1 numOfAccessors=1 redundantCopies=unused
parReg/colocation/persistence/colocationWithFailOverPersist.conf peerHosts=5 peerVMsPerHost=1 peerThreadsPerVM=1 numOfAccessors=1 redundantCopies=unused
/*commenting out for Cheetah release
parReg/colocation/persistence/hct_colocationPersist.conf
   edgeHosts=3 edgeVMsPerHost=1 edgeThreadsPerVM=3
   bridgeHosts=4 bridgeVMsPerHost=1 bridgeThreadsPerVM=3
   redundantCopies=unused */
parReg/colocation/persistence/colocationWithOpsPersist.conf peerHosts=5 peerVMsPerHost=2 peerThreadsPerVM=20 numKeys=1000 byteArraySize=5 redundantCopies=unused
parReg/colocation/persistence/colocationWithOpsHAPersist.conf
   A=accessor accessorHosts=5 accessorVMsPerHost=1 accessorThreadsPerVM=5
   B=dataStore dataStoreHosts=7 dataStoreVMsPerHost=1 dataStoreThreadsPerVM=5
   numKeys=10000 byteArraySize=5000 redundantCopies=1 numVMsToStop=1
parReg/colocation/persistence/colocationWithOpsHAPersist.conf
   A=accessor accessorHosts=5 accessorVMsPerHost=1 accessorThreadsPerVM=5
   B=dataStore dataStoreHosts=7 dataStoreVMsPerHost=1 dataStoreThreadsPerVM=5
   numKeys=10000 byteArraySize=5000 redundantCopies=2 numVMsToStop=2
parReg/colocation/persistence/colocationWithOpsHAPersist.conf
   A=accessor accessorHosts=5 accessorVMsPerHost=1 accessorThreadsPerVM=5
   B=dataStore dataStoreHosts=7 dataStoreVMsPerHost=1 dataStoreThreadsPerVM=5
   numKeys=10000 byteArraySize=5000 redundantCopies=3 numVMsToStop=3
/*commenting out for Cheetah release
parReg/colocation/persistence/hct_colocationWithOpsHAPersist.conf
   edgeHosts=5 edgeVMsPerHost=1 edgeThreadsPerVM=5
   bridgeHosts=7 bridgeVMsPerHost=1 bridgeThreadsPerVM=5
   numKeys=1000 byteArraySize=500 redundancy=3 numVMsToStop=1
   redundantCopies=1   
parReg/colocation/persistence/hct_colocationWithOpsHAPersist.conf
   edgeHosts=5 edgeVMsPerHost=1 edgeThreadsPerVM=5
   bridgeHosts=7 bridgeVMsPerHost=1 bridgeThreadsPerVM=5
   numKeys=1000 byteArraySize=500 redundancy=3 numVMsToStop=2
   redundantCopies=2   
parReg/colocation/persistence/hct_colocationWithOpsHAPersist.conf
   edgeHosts=5 edgeVMsPerHost=1 edgeThreadsPerVM=5
   bridgeHosts=7 bridgeVMsPerHost=1 bridgeThreadsPerVM=5
   numKeys=1000 byteArraySize=500 redundancy=3 numVMsToStop=3
   redundantCopies=3 */ 
//scenario1: one node goes down, redundancy is unsatisfied, no bucket movement, only primary on failed node reselected
parReg/colocation/persistence/colocationwithoutnodeupPersist.conf 
	peerHosts=4 peerVMsPerHost=1 peerThreadsPerVM=1 
	numOfAccessors=0 redundantCopies=3 totalNumBuckets=12
//scenario2: one node goes down, comes back, redundancy is satisfied, bucket movement
parReg/colocation/persistence/colocationwithnodeupPersist.conf 
	peerHosts=4 peerVMsPerHost=1 peerThreadsPerVM=1 
	numOfAccessors=0 redundantCopies=3 totalNumBuckets=12
//scenario3: one node goes down, redundancy is satisfied, no bucket movement, only primary on failed node reselected
parReg/colocation/persistence/colocationwithoutnodeupRCPersist.conf 
	peerHosts=4 peerVMsPerHost=1 peerThreadsPerVM=1 
	numOfAccessors=0 redundantCopies=2 totalNumBuckets=12
//scenario4: one node goes down, comes back , redundancy is satisfied, bucket movement
parReg/colocation/persistence/colocationwithnodeupPersist.conf 
	peerHosts=4 peerVMsPerHost=1 peerThreadsPerVM=1 
	numOfAccessors=0 redundantCopies=2 totalNumBuckets=12
//scenario5: one node goes down, redundancy is unsatisfied, no bucket movement, only primary on failed node reselected, ops are on during and after failover
parReg/colocation/persistence/colocationwithoutnodeupWithOpsPersist.conf 
	peerHosts=4 peerVMsPerHost=1 peerThreadsPerVM=1 
	numOfAccessors=0 redundantCopies=3 totalNumBuckets=12
//scenario6: one node goes down, comes back, redundancy is satisfied, bucket movement,ops are on during and after failover
parReg/colocation/persistence/colocationwithnodeupWithOpsPersist.conf 
	peerHosts=4 peerVMsPerHost=1 peerThreadsPerVM=1 
	numOfAccessors=0 redundantCopies=3 totalNumBuckets=12
//scenario7: one node goes down, redundancy is satisfied, no bucket movement, only primary on failed node reselected,ops are on during and after failover
parReg/colocation/persistence/colocationwithoutnodeupWithOpsRCPersist.conf 
	peerHosts=4 peerVMsPerHost=1 peerThreadsPerVM=1 
	numOfAccessors=0 redundantCopies=2 totalNumBuckets=12
//scenario8: one node goes down, comes back , redundancy is satisfied, bucket movement, ops are on during and after failover
parReg/colocation/persistence/colocationwithnodeupWithOpsPersist.conf 
	peerHosts=4 peerVMsPerHost=1 peerThreadsPerVM=1 
	numOfAccessors=0 redundantCopies=2 totalNumBuckets=12  

parReg/colocation/persistence/prColocationWithListenerPersist.conf  
   peerHosts=5 peerVMsPerHost=2 peerThreadsPerVM=20 
   numKeys=5000 byteArraySize=5 redundantCopies=3

// removed because of bug 41984; Team determined that we will
// not support PartitionManager/PartitionListener with HA and persistence
//parReg/colocation/persistence/prColocationWithListenerHAPersist.conf
//   A=edge edgeHosts=5 edgeVMsPerHost=1 edgeThreadsPerVM=5
//   B=bridge bridgeHosts=7 bridgeVMsPerHost=1 bridgeThreadsPerVM=5
//   numKeys=10000 byteArraySize=5000 redundantCopies=1 numVMsToStop=1
//   redundancy=3	
	
parReg/colocation/persistence/prColocationWithListenerRebalancePersist.conf
  A = peer peerHosts=4 peerVMsPerHost=2 peerThreadsPerVM=5
  B = rebalance rebalanceHosts=1 rebalanceVMsPerHost=1 rebalanceThreadsPerVM=1
  numKeys=2000 redundantCopies=0
	
